B= read_csv(paste0(wd,"/out/graphLaplacianbinprob.csv"))
B= read_csv(paste0(wd,"/out/graphLaplacianbinprob.csv"))
wasserstein1d(B$pest,B$ptrue)
wasserstein1d(A$pest,A$ptrue)
plot(A$pest-A$ptrue)
points(B$pest-B$ptrue,col='red')
wasserstein1d(A$pest,A$ptrue)
sum(abs(A$pest-A$ptrue))
wasserstein1d(A$pest,A$ptrue)/ wasserstein1d(B$pest,B$ptrue)
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(tidyverse)
library(transport)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dir_binprob <- read_csv(paste0(wd,"/out/Dirichletbinprob.csv")) %>% mutate(Dirichlet=(pest-ptrue)/ptrue)
gl_binprob <- read_csv(paste0(wd,"/out/graphLaplacianbinprob.csv")) %>% mutate(GraphLaplacian=(pest-ptrue)/ptrue)
d <- dir_binprob %>% dplyr::select(x,y,Dirichlet) %>%
mutate(GraphLaplacian =gl_binprob$GraphLaplacian) %>%
gather(key="estimator",value="error",Dirichlet, GraphLaplacian)
d
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <- ggplot(data=d,aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimator)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(tidyverse)
library(transport)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dir_binprob <- read_csv(paste0(wd,"/out/Dirichletbinprob.csv")) %>% mutate(Dirichlet=(pest-ptrue)/ptrue)
gl_binprob <- read_csv(paste0(wd,"/out/graphLaplacianbinprob.csv")) %>% mutate(GraphLaplacian=(pest-ptrue)/ptrue)
d <- dir_binprob %>% dplyr::select(x,y,Dirichlet) %>%
mutate(GraphLaplacian =gl_binprob$GraphLaplacian) %>%
gather(key="estimator",value="error",Dirichlet, GraphLaplacian)
d
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <- ggplot(data=d,aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimator)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
### make figs for binerror probabilities
dir_binprob <- read_csv(paste0(wd,"/out/Dirichletbinprob.csv")) %>% mutate(Dirichlet=(pest-ptrue))
gl_binprob <- read_csv(paste0(wd,"/out/graphLaplacianbinprob.csv")) %>% mutate(GraphLaplacian=(pest-ptrue))
d <- dir_binprob %>% dplyr::select(x,y,Dirichlet) %>%
mutate(GraphLaplacian =gl_binprob$GraphLaplacian) %>%
gather(key="estimator",value="error",Dirichlet, GraphLaplacian)
d
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <- ggplot(data=d,aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimator)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
### make figs for binerror probabilities
dir_binprob <- read_csv(paste0(wd,"/out/binprobs.csv"))
### make figs for binerror probabilities
d <- read_csv(paste0(wd,"/out/binprobs.csv"))
d
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimator",value="val",pdir, pgl)
d
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(error= ptrue=estimate)
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(error = ptrue-estimate)
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(error = ptrue-estimate)
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl)
dd %>%     gather(key="estimate",value="val",pdir, pgl)
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(err = ptrue-val)
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(error = ptrue-val)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimator)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="val",pdir, pgl) %>% mutate(error = ptrue-val)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
d <- dd %>%     gather(key="estimate",value="val",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-val)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim))
p
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + lab("") + ylab("")
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
mincol_lim <- min(d$val); maxcol_lim <- max(d$val)
p2 <-d %>%  ggplot(aes(x, y, fill=val)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p2
p2 <-d %>%  ggplot(aes(x, y, fill=val)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2()
p2
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=val)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2()
p2
d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=val)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2()
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=val)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=val)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
library(gridExtra)
grid.arrange(p2,p3)
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=val)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
mincol_lim <- min(d$val); maxcol_lim <- max(d$val)
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=probability)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=probability)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate,ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate,ncol)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
mincol_lim <- min(d$val); maxcol_lim <- max(d$val)
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=probability)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=probability)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
show(p)
u=rand(10)
u=runif(10)
v= runif(10)
wasserstein1d(u,v)
wasserstein1d(v,u)
sum(abs(u-v))
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
mincol_lim <- min(d$val); maxcol_lim <- max(d$val)
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p2
pdf("./out/binproberro2.pdf",width=8,height=4)
show(p2)
dev.off()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
mincol_lim <- min(d$val); maxcol_lim <- max(d$val)
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2 <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p3 <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
grid.arrange(p2,p3)
p2a <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberro2.pdf",width=8,height=4)
show(p2)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberro2.pdf",width=8,height=4)
show(p2)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>%ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberror2.pdf",width=8,height=4)
show(p2)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberror2.pdf",width=8,height=4)
show(p2)
dev.off()
p2
pdf("./out/binproberror2.pdf",width=8,height=4)
display(p2)
dev.off()
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate, ncol=1)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=4,height=8)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b)
pdf("./out/binproberror2.pdf",width=4,height=8)
grid.arrange(p2a,p2b)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b, ncol=2)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b, ncol=2)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b, ncol=2)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b, ncol=2)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("")
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("")
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("")
p2 <- grid.arrange(p2a,p2b, ncol=2)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b, ncol=2)
dev.off()
theme_set(theme_minimal(base_size = 12), aspect.ratio=1/1)
theme_set(theme_minimal(base_size = 12))
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("") + theme(aspect.ratio=1)
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("") + theme(aspect.ratio=1)
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("") + theme(aspect.ratio=1)
p2 <- grid.arrange(p2a,p2b, ncol=2)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b, ncol=2)
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
theme_set(theme_minimal(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("") + theme(aspect.ratio=1)
p
pdf("./out/binproberror.pdf",width=8,height=4)
show(p)
dev.off()
p2a <-d %>%  filter(estimate=="Dirichlet") %>% ggplot(aes(x, y, fill=error)) + geom_tile() +
scale_fill_gradient2() + ggtitle("Dirichlet") + xlab("") + ylab("") + theme(aspect.ratio=1)
p2b <- d %>%  filter(estimate=="graphLaplacian") %>%ggplot(aes(x, y, fill=error)) + geom_tile()+
scale_fill_gradient2() + ggtitle("graphLaplacian")+ xlab("") + ylab("") + theme(aspect.ratio=1)
p2 <- grid.arrange(p2a,p2b, ncol=2)
pdf("./out/binproberror2.pdf",width=8,height=4)
grid.arrange(p2a,p2b, ncol=2)
dev.off()
library(readr)
observations <- read_csv("out/observations.csv")
View(observations)
?geom_rug
p + geom_rug(data=obs, aes(x=t))
obs <- read_csv("out/observations.csv")
obs <- read_csv("out/observations.csv")
p + geom_rug(data=obs, aes(x=t))
d <- dd %>%     gather(key="estimate",value="probability",Dirichlet, graphLaplacian) %>% mutate(error = ptrue-probability)
mincol_lim <- min(d$error); maxcol_lim <- max(d$error)
p <-d %>%  ggplot(aes(x, y, fill=error)) + geom_tile() + facet_wrap(~estimate)+
scale_fill_gradient2(limits=c(mincol_lim, maxcol_lim)) + xlab("") + ylab("") + theme(aspect.ratio=1)
p
p + geom_rug(data=obs, aes(x=t))
?geom_rug
?geomRug
?GeomRug
