library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/mnsmall/binprobs.csv"))
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/mnsmall/binprobs.csv"))
### make figs for binerror probabilities
dd <- read_csv("/mnsmall/binprobs.csv"))
### make figs for binerror probabilities
dd <- read_csv("/mnsmall/binprobs.csv")
### make figs for binerror probabilities
dd <- read_csv("./mnsmall/binprobs.csv")
obs <- read_csv("./mnsmallout/observations.csv")
obs <- read_csv("./mnsmall/observations.csv")
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
i=1
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv")
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
trace <- read.csv(paste0(outdir,"/tracepcn.csv")) %>% gather(key="parameter", value="y", theta1, theta10,theta11,logtau)
read.csv(paste0(outdir,"/tracepcn.csv"))
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf",width=5,height=5)
p4
dev.off()
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
p4
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
p4
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
p4
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
p4
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean.pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
paste0("a", "adfad", "adfaf")
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
app <- c("_small", "_medium", "_large")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean",app[i],".pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
app <- c("_small", "_medium", "_large")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean",app[i],".pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
obs <- read_csv("out/observations.csv")
trace <- read.csv("out/tracepcn.csv") %>% gather(key="parameter", value="y", theta1, theta10,theta11,logtau)
mc <- read_csv("out/mcstudy.csv", col_types = cols(samplesize = col_character()))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf("./out/postmean.pdf",width=8,height=4)
show(p)
dev.off()
# p_loss <- dd %>% filter(method %in% c("D","LNGL")) %>%  ggplot(aes(x, y, fill=loss)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method)+
#   scale_fill_gradient2() + xlab("") + ylab("") + theme(aspect.ratio=1) #+ ggtitle("Error")
# p_loss
#
# pdf("./out/losspostmean.pdf",width=8,height=4)
# show(p_loss)
# dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf("./out/obs.pdf",width=5,height=5)
p4
dev.off()
p5 <- trace %>% ggplot() + geom_path(aes(x=iterate,y=y)) + facet_wrap(~parameter, scales="free") + ylab("")
pdf("./out/traceplotspcn.pdf",width=8, height=6)
p5
dev.off()
## plots for MC-study
pmc <- mc %>% gather(key="prior", value=x, D, LNGL) %>% ggplot(aes(x=x)) + geom_boxplot(fill="lightblue") +
facet_wrap(~ prior+samplesize, nrow=1) + xlab("Wasserstein distance") +
coord_flip() +   scale_y_continuous(breaks = NULL)
pmc
pdf("./out/wasserstein1.pdf",width=8, height=3)
pmc
dev.off()
pmc2 <- mc %>% ggplot(aes(x=D, y = LNGL, colour=samplesize)) + geom_point() + geom_abline(aes(slope=1,intercept=0))  +
theme(aspect.ratio=1) +  scale_colour_colorblind()
pmc2
pdf("./out/wasserstein2.pdf",width=4, height=4)
pmc2
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
obs <- read_csv("out/observations.csv")
trace <- read.csv("out/tracepcn.csv") %>% gather(key="parameter", value="y", theta1, theta10,theta11,logtau)
mc <- read_csv("out/mcstudy.csv", col_types = cols(samplesize = col_character()))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf("./out/postmean.pdf",width=8,height=4)
show(p)
dev.off()
# p_loss <- dd %>% filter(method %in% c("D","LNGL")) %>%  ggplot(aes(x, y, fill=loss)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method)+
#   scale_fill_gradient2() + xlab("") + ylab("") + theme(aspect.ratio=1) #+ ggtitle("Error")
# p_loss
#
# pdf("./out/losspostmean.pdf",width=8,height=4)
# show(p_loss)
# dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf("./out/obs.pdf",width=5,height=5)
p4
dev.off()
p5 <- trace %>% ggplot() + geom_path(aes(x=iterate,y=y)) + facet_wrap(~parameter, scales="free") + ylab("")
pdf("./out/traceplotspcn.pdf",width=8, height=6)
p5
dev.off()
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
### make figs for binerror probabilities
dd <- read_csv(paste0(wd,"/out/binprobs.csv"))
obs <- read_csv("out/observations.csv")
trace <- read.csv("out/tracepcn.csv") %>% gather(key="parameter", value="y", theta1, theta10,theta11,logtau)
mc <- read_csv("out/mcstudy.csv", col_types = cols(samplesize = col_character()))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf("./out/postmean.pdf",width=8,height=4)
show(p)
dev.off()
# p_loss <- dd %>% filter(method %in% c("D","LNGL")) %>%  ggplot(aes(x, y, fill=loss)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method)+
#   scale_fill_gradient2() + xlab("") + ylab("") + theme(aspect.ratio=1) #+ ggtitle("Error")
# p_loss
#
# pdf("./out/losspostmean.pdf",width=8,height=4)
# show(p_loss)
# dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf("./out/obs.pdf",width=5,height=5)
p4
dev.off()
p5 <- trace %>% ggplot() + geom_path(aes(x=iterate,y=y)) + facet_wrap(~parameter, scales="free") + ylab("")
pdf("./out/traceplotspcn.pdf",width=8, height=6)
p5
dev.off()
p
# make figs for CSCM
# get directory of source script
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(transport)
library(scales)
library(ggthemes)
theme_set(theme_bw(base_size = 12))
wd = getwd()
dirs <- c("./mnsmall", "./mnmedium", "./mnlarge")
app <- c("_small", "_medium", "_large")
for (i in 1:3)
{
outdir = dirs[i]
### make figs for binerror probabilities
dd <- read_csv(paste0(outdir,"/binprobs.csv"))
obs <- read_csv(paste0(outdir,"/observations.csv"))
p <-dd %>%  ggplot(aes(x, y, fill=binprob)) + geom_raster(hjust=0,vjust=0) + facet_wrap(~method, scales="free")+
scale_fill_gradient(low="lightblue", high="black") + xlab("") + ylab("") + theme(aspect.ratio=1/1) #+ ggtitle("Error")
p
pdf(paste0(outdir,"/postmean",app[i],".pdf"),width=8,height=4)
show(p)
dev.off()
ddtrue <- dd %>% filter(method=='true')
p4 <- ggplot() +geom_raster(data=ddtrue,aes(x=x,y=y,fill=binprob),hjust=0,vjust=0)  +
geom_point(data=obs, aes(x=t, y=y, colour=yobserved), size=1.1) +
scale_fill_gradient(low="lightblue", high="black") +
#ggtitle("true bin probabilities and observations")+
xlab("") + ylab("") + theme(aspect.ratio=1)
p4
pdf(paste0(outdir,"/obs.pdf"),width=5,height=5)
show(p4)
dev.off()
}
